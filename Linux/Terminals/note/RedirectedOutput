---------------------------------
|Interface descriptions         |
---------------------------------
-------------
|  isatty   |
-------------

The isatty system call returns 1 if the open file descriptor, fd , is connected to a terminal and 0 otherwise.

#include <unistd.h>

int isatty(int fd);

termios is the standard interface specified by POSIX and is similar to the System V interface termio .
The terminal interface is controlled by setting values in a structure of type termios and using a small set of function calls. Both are defined in the header file termios.h

A minimum termios structure is typically declared as follows (although the X/Open specification allows additional fields to be included):

#include <termios.h>

struct termios {
    tcflag_t c_iflag;/*input   model*/
    tcflag_t c_oflag;/*output  model*/
    tcflag_t c_cflag;/*control model*/
    tcflag_t c_lflag;/*local   model*/
    cc_t c_cc[NCCS]; /*special control   model*/
};

---------------------------------------------------------------------
|  c_iflag   |  Description                                         |
---------------------------------------------------------------------
|  BRKINT       Generate an interrupt when a break condition        |
|                (loss of connection) is detected on the line       |
--------------------------------------------------------------------- 
|  IGNBRK       Ignore break conditions on the line                 |
---------------------------------------------------------------------
|  ICRNL        Convert a received carriage return to a newline     |
---------------------------------------------------------------------
|  IGNCR        Ignore received carriage returns                    |
---------------------------------------------------------------------
|  INLCR        Convert received newlines to carriage returns       |
--------------------------------------------------------------------- 
|  IGNPAR       Ignore characters with parity errors                |
---------------------------------------------------------------------
|  INPCK        Perform parity checking on received characters      |
---------------------------------------------------------------------
|  PARMRK       Mark parity errors                                  |
---------------------------------------------------------------------
|  ISTRIP       Strip (set to seven bits) all incoming characters   |
---------------------------------------------------------------------
|  IXOFF        Enable software flow control on input               |
---------------------------------------------------------------------
|  IXON         Enable software flow control on output              |
---------------------------------------------------------------------
If neither BRKINT nor IGNBRK is set, a break condition on the line is read as a NULL (0x00) character.

---------------------------------------------------------------------
|  c_oflag   |  Description                                         |
---------------------------------------------------------------------
|  OPOST        Turn on output processing                           |
--------------------------------------------------------------------- 
|  ONLCR        Convert any output newline to a carriage            |
|               return/line feed pair                               |
---------------------------------------------------------------------
|  OCRNL        Convert any output carriage return to a newline     |
---------------------------------------------------------------------
|  ONOCR        No carriage return output in column 0               |
---------------------------------------------------------------------
|  ONLRET       A newline also does a carriage return               |
---------------------------------------------------------------------
|  OFILL        Send fill characters to provide delays              |
---------------------------------------------------------------------
|  OFDEL        Use DEL as a fill character, rather than NULL       |
---------------------------------------------------------------------
|  NLDLY        Newline delay selection                             |
---------------------------------------------------------------------
|  CRDLY        Carriage return delay selection                     |
---------------------------------------------------------------------
|  TABDLY       Tab delay selection                                 |
---------------------------------------------------------------------
|  BSDLY        Backspace delay selection                           |
---------------------------------------------------------------------
|  VTDLY        Vertical tab delay selection                        |
---------------------------------------------------------------------
|  FFDLY        Form feed delay selection                           |
---------------------------------------------------------------------
If OPOST is not set, all the other flags are ignored.

---------------------------------------------------------------------
|  c_cflag   |  Description                                         |
---------------------------------------------------------------------
|  CLOCAL       Ignore any modem status lines.                      |
---------------------------------------------------------------------
|  CREAD        Enable the receipt of characters.                   |
---------------------------------------------------------------------
|  CS5          Use five bits in sent or received characters.       |
---------------------------------------------------------------------
|  CS6          Use six bits in sent or received characters.        |
---------------------------------------------------------------------
|  CS7          Use seven bits in sent or received characters.      |
---------------------------------------------------------------------
|  CS8          Use eight bits in sent or received characters.      |
---------------------------------------------------------------------
|  CSTOPB       Use two stop bits per character, rather than one.   |
---------------------------------------------------------------------
|  HUPCL        Hang up modem on close.                             |
---------------------------------------------------------------------
|  PARENB       Enable parity generation and detection.             |
---------------------------------------------------------------------
|  PARODD       Use odd parity rather than even parity.             |
---------------------------------------------------------------------
If HUPCL is set, when the terminal driver detects that the last file descriptor referring to the terminal
has been closed, it will set the modem control lines to “hang-up” the line.

-----------------------------------------------------------------------
|  c_lflag   |  Description                                           |
-----------------------------------------------------------------------
|  ECHO         Enable local echoing of input characters              |
-----------------------------------------------------------------------
|  ECHOE        Perform a Backspace, Space,                           |
|               Backspace combination on receiving ERASE              |
-----------------------------------------------------------------------
|  ECHOK        Perform erase line on the KILL character              |
-----------------------------------------------------------------------
|  ECHONL       Echo newline characters                               |
-----------------------------------------------------------------------
|  ICANON       Enable canonical input processing                     |
|               (see the text following this list)                    |
-----------------------------------------------------------------------
|  IEXTEN       Enable implementation-specific functions              |
----------------------------------------------------------------------- 
|  ISIG         Enable signals                                        |
-----------------------------------------------------------------------
|  NOFLSH       Disable flush on queue                                |
-----------------------------------------------------------------------
|  TOSTOP       Send background processes a signal on write attempts  |
-----------------------------------------------------------------------
The two most important flags here are ECHO , which allows you to suppress the echoing of typed characters, and ICANON , which switches the terminal between two very distinct modes of processing received characters.
If the ICANON flag is set, the line is said to be in canonical mode;
if not, the line is in non-canonical mode.

For canonical mode, the array indices are:
------------------------------
| c_cc   |  Description      |
------------------------------
| VEOF      EOF character    |
------------------------------
| VEOL      EOL character    |
------------------------------
| VERASE    ERASE character  |
------------------------------
| VINTR     INTR character   |
------------------------------
| VKILL     KILL character   |
------------------------------
| VQUIT     QUIT character   |
------------------------------
| VSUSP     SUSP character   |
------------------------------
| VSTART    START character  |
------------------------------
| VSTOP     STOP character   |
------------------------------

For non-canonical mode, the array indices are:
------------------------------
| c_cc   |  Description      |
------------------------------
| VINTR     INTR character   |
------------------------------
| VMIN      MIN value        |
------------------------------
| VQUIT     QUIT character   |
------------------------------
| VSUSP     SUSP character   |
------------------------------
| VTIME     TIME value       |
------------------------------
| VSTART    START character  |
------------------------------
| VSTOP     STOP character   |
------------------------------


Characters
Since the special characters and non-canonical MIN and TIME values are so important for more advanced input character processing
------------------------------------------------------------------
| Character   |  Description                                     |
------------------------------------------------------------------
| INTR           Causes the terminal driver to send a SIGINT     |
|                signal to processes connected to the terminal.  |
------------------------------------------------------------------
| QUIT           Causes the terminal driver to send a SIGQUIT    |
|                signal to processes connected to the terminal.  |
------------------------------------------------------------------
| ERASE          Causes the terminal driver to delete the last   |
|                character on the line.                          |
------------------------------------------------------------------
| KILL           Causes the terminal driver to delete            |
|                the entire line.                                |
------------------------------------------------------------------
| EOF            Causes the terminal driver to pass all          |
|                characters on the line to the application       |
|                reading input. If the line is empty, a read     |
|                call will return zero characters as though a    |
|                read had been attempted at the end of a file.   |
------------------------------------------------------------------
| EOL            Acts as a line terminator in addition to        |
|                the more usual newline character.               |
------------------------------------------------------------------
| SUSP           Causes the terminal driver to send a SIGSUSP    |
|                signal to processes connected to the terminal.  |
|                If your UNIX supports job control, the current  |
|                application will be suspended.                  |
------------------------------------------------------------------
| STOP           Acts to “flow off;” that is, prevent further    |
|                output to the terminal. It’s used to support    |
|                XON/XOFF flow control and is usually set to the |
|                ASCII XOFF character, Ctrl+S.                   |
------------------------------------------------------------------
| START          Restarts output after a STOP character,         |
|                often the ASCII XON character.                  |
------------------------------------------------------------------

The TIME and MIN Values

The values of TIME and MIN are used only in non-canonical mode and act together to control the reading of input.
Together, they control what happens when a program attempts to read a file descriptor associated with a terminal.

There are four cases:
❑ MIN = 0 and TIME = 0 : In this case, a read will always return immediately. If some characters are available, they will be returned;if none are available, read will return zero and no characters will have been read.

❑ MIN = 0 and TIME > 0 : In this case, the read will return when any character is available to be read or when TIME tenths of a second have elapsed. If no character was read because the timer expired, read will return zero. Otherwise, it will return the number of characters read.

❑ MIN > 0 and TIME = 0 : In this case, the read will wait until MIN characters can be read and then return that number of characters. Zero is returned on end of file.

❑ MIN > 0 and TIME > 0: This is the most complex case. When read is called, it waits for a character to be received. When the first character is received, and every subsequent time a character is received, an inter-character timer is started (or restarted if it was already running). The read will return when either MIN characters can be read or the inter-character time of TIME tenths of a second expires. This can be useful for telling the difference between a single press of the Escape key and the start of a function key escape sequence. Be aware,though, that network communications or high processor loads neatly erase such fine timing information.

----------------
|  tcgetattr   |
----------------

This call writes the current values of the terminal interface variables into the structure pointed to by termios_p . 
#include <termios.h>

int tcgetattr(int fd, struct termios *termios_p);


----------------
|  tcsetattr   |
----------------


#include <termios.h>

int tcsetattr(int fd, int actions, const struct termios *termios_p);

-----------------------------------------------------------------
|  actions   |  Description                                     |
-----------------------------------------------------------------
|  TCSANOW      Changes values immediately.                     |
-----------------------------------------------------------------
|  TCSADRAIN    Changes values when current output is complete. |
-----------------------------------------------------------------
|  TCSAFLUSH    Changes values when current output is complete, |
|               but discards any input currently available and  |
|               not yet returned in a read call.                |
-----------------------------------------------------------------


